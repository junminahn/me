{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","loading","DefaultLayout","React","lazy","Address","Login","App","fallback","exact","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DefaultIcon","Leaflet","icon","Icon","Default","prototype","options","iconUrl","iconRetinaUrl","iconRetina","shadowUrl","iconShadow","Marker","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"icAIA,IAAMA,EAAcC,YAAH,KAMXC,EAAU,6CACVC,EAAgBC,IAAMC,MAAK,kBAAM,+DAEjCC,EAAUF,IAAMC,MAAK,kBAAM,qEAC3BE,EAAQH,IAAMC,MAAK,kBAAM,qEAuBhBG,MArBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,WAAD,CAAUC,SAAUP,EAApB,UACE,cAACF,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,WAAlB,SACE,cAACR,EAAD,UACE,cAACG,EAAD,QAGJ,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,IAAlB,SACE,cAACJ,EAAD,MAEF,cAAC,IAAD,CAAUK,GAAG,eClBRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKVQ,EAAcC,IAAQC,KAAR,2BACbD,IAAQE,KAAKC,QAAQC,UAAUC,SADlB,IAEhBC,QAASL,IACTM,cAAeC,IACfC,UAAWC,OAEbV,IAAQW,OAAOP,UAAUC,QAAQJ,KAAOF,EAExCa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B1B,M","file":"static/js/main.eab29c5f.chunk.js","sourcesContent":["import React, { Suspense } from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  .pointer { cursor: pointer; }\n  .no-padding { padding: 0; }\n  .no-margin { margin: 0; }\n`;\n\nconst loading = <div>Loading...</div>;\nconst DefaultLayout = React.lazy(() => import('./layouts/DefaultLayout'));\n\nconst Address = React.lazy(() => import('./pages/Address'));\nconst Login = React.lazy(() => import('./pages/Login'));\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Suspense fallback={loading}>\n        <GlobalStyle />\n        <Switch>\n          <Route exact path=\"/address\">\n            <DefaultLayout>\n              <Address />\n            </DefaultLayout>\n          </Route>\n          <Route exact path=\"/\">\n            <Login />\n          </Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Leaflet from 'leaflet';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'leaflet/dist/leaflet.css';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport iconRetina from 'leaflet/dist/images/marker-icon-2x.png';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet DefaultIcon = Leaflet.icon({\n  ...Leaflet.Icon.Default.prototype.options,\n  iconUrl: icon,\n  iconRetinaUrl: iconRetina,\n  shadowUrl: iconShadow,\n});\nLeaflet.Marker.prototype.options.icon = DefaultIcon;\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}