{"version":3,"sources":["services/axios.js","services/data.js","pages/Login.js"],"names":["instance","axios","create","baseURL","process","timeout","_encryptionKey","fetchData","url","fallbackValue","a","get","then","res","data","console","error","isObject","bytes","AES","decrypt","plaintext","toString","CryptoUtf8","JSON","parse","getAddress","setEncryptionKey","key","isEncryptionKeySet","Login","textAlign","style","height","verticalAlign","Column","maxWidth","as","color","size","stacked","Input","fluid","icon","iconPosition","placeholder","type","onChange","e","target","value","to"],"mappings":"oTAIaA,E,OAAWC,EAAMC,OAAO,CACnCC,QAAQ,GAAD,OAHMC,MAGN,KACPC,QAAS,ICDPC,EAAiB,KAIfC,EAAS,uCAAG,WAAOC,EAAKC,GAAZ,mBAAAC,EAAA,+EAEKV,EAASW,IAAIH,GAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAAMC,QAAQC,OAFrD,UAERF,EAFQ,QAIVG,IAASH,GAJC,yCAKLA,GALK,cAQRI,EAAQC,IAAIC,QAAQN,EAAMR,GAC1Be,EAAYH,EAAMI,SAASC,KATnB,kBAUPC,KAAKC,MAAMJ,IAVJ,2DAYPZ,GAZO,0DAAH,wDAgBR,SAAeiB,IAAtB,+B,4CAAO,sBAAAhB,EAAA,+EACEH,EAAU,qBAAsB,KADlC,4C,sBAIA,SAASoB,EAAiBC,GAC/BtB,EAAiBsB,EAGZ,SAASC,IAGd,QAASvB,I,gUCFIwB,UA7BD,WACZ,OACE,cAAC,IAAD,CAAMC,UAAU,SAASC,MAAO,CAAEC,OAAQ,SAAWC,cAAc,SAAnE,SACE,eAAC,IAAKC,OAAN,CAAaH,MAAO,CAAEI,SAAU,KAAhC,UACE,cAAC,IAAD,CAAQC,GAAG,KAAKC,MAAM,OAAOP,UAAU,SAAvC,wBAGA,cAAC,IAAD,CAAMQ,KAAK,QAAX,SACE,eAAC,IAAD,CAASC,SAAO,EAAhB,UACE,cAAC,IAAKC,MAAN,CACEC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,WACZC,KAAK,WACLC,SAAU,SAAAC,GAAC,OAAIrB,YAAiBqB,EAAEC,OAAOC,UAE3C,cAAC,IAAD,CAAMC,GAAG,WAAT,SACE,cAAC,IAAD,CAAQb,MAAM,OAAOI,OAAK,EAACH,KAAK,QAAhC","file":"static/js/8.2e951a73.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiUrl = process.env.REACT_APP_API_URL || '/';\n\nexport const instance = axios.create({\n  baseURL: `${apiUrl}/`,\n  timeout: 0,\n});\n","import AES from 'crypto-js/aes';\nimport CryptoUtf8 from 'crypto-js/enc-utf8';\nimport isObject from 'lodash/isObject';\nimport { instance } from './axios';\n\nlet _encryptionKey = null;\n\nconst encryptData = process.env.REACT_APP_ENCRYPT_DATA || 'false';\n\nconst fetchData = async (url, fallbackValue) => {\n  try {\n    const data = await instance.get(url).then(res => res.data, console.error);\n\n    if (isObject(data)) {\n      return data;\n    }\n\n    const bytes = AES.decrypt(data, _encryptionKey);\n    const plaintext = bytes.toString(CryptoUtf8);\n    return JSON.parse(plaintext);\n  } catch (e) {\n    return fallbackValue;\n  }\n};\n\nexport async function getAddress() {\n  return fetchData('/data/address.json', []);\n}\n\nexport function setEncryptionKey(key) {\n  _encryptionKey = key;\n}\n\nexport function isEncryptionKeySet() {\n  if (encryptData !== 'true') return true;\n\n  return !!_encryptionKey;\n}\n","import React from 'react';\nimport { Button, Form, Grid, Header, Segment } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { setEncryptionKey } from 'services/data';\n\nconst Login = () => {\n  return (\n    <Grid textAlign=\"center\" style={{ height: '100vh' }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          Junmin Ahn\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n              onChange={e => setEncryptionKey(e.target.value)}\n            />\n            <Link to=\"/address\">\n              <Button color=\"teal\" fluid size=\"large\">\n                Login\n              </Button>\n            </Link>\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}